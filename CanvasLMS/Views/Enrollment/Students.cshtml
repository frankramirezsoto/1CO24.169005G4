@using System.Collections
@model List<CanvasLMS.Models.ViewModels.EnrollmentViewModel>
@{
    ViewData["Title"] = "Course People";
    var professor = ViewBag.Professor;
    var student = ViewBag.Student;
}

@if (professor != null) 
{
     <!-- Modal -->
    <div class="modal fade" id="addEnrollment" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @await Html.PartialAsync("_CreateEnrollment", new CanvasLMS.Models.ViewModels.EnrollmentViewModel(), ViewData)
                </div>
            </div>
        </div>
    </div>
    <!-- Modal for Delete Confirmation -->
    <div class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Enrollment</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this enrollment?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">I'm Sure</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    @await Html.PartialAsync("_Banner", ViewData)
    <div class="col-12 col-lg-1 d-flex justify-content-center align-items-start">
        @if (student != null)
        {
            @await Html.PartialAsync("_NavBarStudent")
        }
        else if (professor != null)
        {
            @await Html.PartialAsync("_NavBarProfessor")
        }
    </div>

    @* Here goes the main screen *@
    <div class="col">
        <div class="row ms-lg-5 mx-auto">
            @* Navigation *@
            <div class="col-12">
                <ul class="nav nav-tabs flex-row justify-content-start ">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Students</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Groups</a>
                    </li>
                </ul>
            </div>
            @* Students Tab *@
            <div class="col-12 border p-3">
                @if (professor != null)
                {
                    <div class=" col-12 d-flex justify-content-end">
                        <div>
                            <a data-bs-toggle="modal" data-bs-target="#addEnrollment" class="icon icon-fill rounded d-flex align-items-center justify-content-center"><i class='bx bx-plus fs-1 my-auto' style="color:#b44fd1"></i></a>
                        </div>
                    </div>
                }
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            @if (professor != null)
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var enrollment in Model)
                        {
                            <tr>
                                <td>@enrollment.Student.FirstName @enrollment.Student.LastName</td>
                                <td>@enrollment.Student.Email</td>
                                @if (professor != null)
                                {
                                    <td>
                                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                data-course-cycle-id="@enrollment.CourseCycleId" data-student-id="@enrollment.StudentId">
                                            <i class='bx bxs-trash text-white'></i>
                                        </button>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>


            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script defer>
        $(document).ready(function () {

            //Function to delete Student enrollment
            $('#deleteModal').on('show.bs.modal', function (e) {
                var courseCycleId = $(e.relatedTarget).data('course-cycle-id');
                var studentId = $(e.relatedTarget).data('student-id');

                $('#confirmDelete').click(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Enrollment/DeleteEnrollment',
                        data: { courseCycleId: courseCycleId, studentId: studentId },
                        success: function (response) {
                            if (response === '200') {
                                location.href = window.location.href + '?displayToast=enrollmentDeleted';
                            } else {
                                displayToast(response, "danger");
                            }
                        }
                    });
                });
            });

            $('#studentDropdown').change(function () {
                var selectedStudentId = $(this).val();

                if (selectedStudentId === "") {
                    // Make input fields blank and writable
                    $('#Student_Id, #Student_FirstName, #Student_LastName, #Student_Email').val('').prop('readonly', false);
                } else {
                    // Make a call to the GetStudentById action and populate the input fields
                    $.ajax({
                        url: '/Enrollment/GetStudentById',
                        type: 'POST',
                        data: { studentId: selectedStudentId },
                        success: function (data) {
                            if (data !== null) {
                                // Populate input fields and make them readonly
                                $('#Student_Id').val(data.id).prop('readonly', true);
                                $('#Student_FirstName').val(data.firstName).prop('readonly', true);
                                $('#Student_LastName').val(data.lastName).prop('readonly', true);
                                $('#Student_Email').val(data.email).prop('readonly', true);
                            } else {
                                // Handle case where student data is not found
                                alert('Student data not found!');
                            }
                        },
                        error: function () {
                            // Handle error scenario
                            alert('Error fetching student data!');
                        }
                    });
                }
            });

            //Function to post the Enrollment
            $('#enrollmentForm').submit(function (e) {
                e.preventDefault(); // Prevent the default form submission

                var formData = $(this).serialize(); // Serialize the form data

                $.ajax({
                    type: 'POST',
                    url: '/Enrollment/CreateEnrollment',
                    data: formData,
                    success: function (response) {
                        if (response === '200') {
                            window.location.href = window.location.href.includes('?')
                                ? window.location.href + '&showToast=studentEnrolled'
                                : window.location.href + '?showToast=studentEnrolled';
                        } else {
                            displayToast(response, 'danger');
                        }
                    },
                    error: function () {
                        displayToast('Error occurred during the request.', 'danger');
                    }
                });
            });
        });
    </script>
}