<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Canvas</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@*     <link rel="stylesheet" href="~/CanvasLMS.styles.css" asp-append-version="true" /> *@

    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" />

    <link rel="icon" href="~/assets/favicon_ulacit.png"/>

</head>
<body id="body-pd">
    <!-- Toast for Notifications -->
    <div id="position" class="toast-container text-white p-3 d-none" style="position: fixed;z-index: 2000;">
        <div id="notificationToast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <span id="toastMessage"></span>
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
    <!-- Header -->
    <header class="header" id="header">
        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
    </header>
    <!-- NavBar -->
    <div class="l-navbar" id="nav-bar">
        <nav class="nav">
            <div>
                <a href="#" class="nav_logo"> 
                    <img src="~/assets/images/logo-only-white.png" alt="logo" class="w-25"/>
                </a>
                <div class="nav_list"> 
                    <a href="#" class="nav_link text-white"> 
                        <i class='bx bxs-user-circle nav_icon'></i>
                        <span class="nav_name">Account</span> 
                    </a> 
                    <a href="@Url.Content("~/CourseCycle")" class="nav_link text-white">
                        <i class='bx bxs-book nav_icon'></i>
                        <span class="nav_name">Courses</span> 
                    </a> 
                </div>
            </div> 
            <a asp-action="SignOut" asp-controller="Login" class="nav_link text-white">
                <i class='bx bx-log-out nav_icon'></i> 
                <span class="nav_name">Sign Out</span> 
            </a>
        </nav>
    </div>
    <!--Container Main start-->
    <div style="min-height:85vh">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - CanvasLMS - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.10.2/umd/popper.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/sidebar.js"></script>
    <script>
        //Function to show an alert
        function displayToast(message, background) {
            var toastContainer = document.getElementById('notificationToast');
            var toastMessage = document.getElementById('toastMessage');
            var position = document.getElementById('position');

            //Set the position
            //Position is added here because if added when initialized the exit button shows static on startup
            position.classList.remove('d-none')
            position.classList.add('top-0', 'end-0')
            // Set the message content
            toastMessage.innerHTML = message;
            toastContainer.classList.remove(...toastContainer.classList);
            toastContainer.classList.add('toast', `bg-${background}`);

            // Create a new Toast instance and show it
            var toast = new bootstrap.Toast(toastContainer);
            toast.show();
        }

        const urlParams = new URLSearchParams(window.location.search);
        const showToast = urlParams.get('showToast');
        switch (showToast) {
            case "courseCycleAdded":
                displayToast("Course added successfully.", "success")
                break;
            case "studentEnrolled":
                displayToast("Student enrolled successfully.", "success")
                break;
            case "enrollmentDeleted":
                displayToast("Enrollment deleted successfully.", "success")
                break;
            case "evaluationItemCreated":
                displayToast("Evaluation Item added successfully.", "success")
                break;
            case "evaluationItemUpdated":
                displayToast("Evaluation Item updated successfully.", "success")
                break;
            case "evaluationDeleted":
                displayToast("Evaluation Item deleted successfully.", "success")
                break;
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
